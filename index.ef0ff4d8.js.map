{"mappings":"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","sources":["src/index.js","src/scripts/home-scripts.js","src/scripts/render-movies-home.js","src/scripts/modal-students.js"],"sourcesContent":["import './scripts/theme-switch';\nimport './scripts/hero';\nimport './scripts/modal-window';\nimport './scripts/home-scripts';\nimport './scripts/modal-students';\nimport './scripts/current';\n","const addBtnRef = document.querySelector('#btn__upcoming');\nconst LibKey = 'myLibrary';\n\nimport {\n  getWeekTrendingMovies,\n  getUpcomingMovies,\n  getGenres,\n} from './movies-api';\nimport { renderTrending, renderUpcoming } from './render-movies-home';\nimport { showTrending, showUpcoming } from './render-movies-home';\ngetGenres().then(data => {\n  global.genres = data;\n  renderTrending(getWeekTrendingMovies, showTrending);\n  renderUpcoming(getUpcomingMovies, showUpcoming);\n  const addBtnRef = document.querySelector('#btn__upcoming');\n});\n\n// addBtnRef.addEventListener('click', () => {\n//   const addBtnRef = event.target.closest('#btn__upcoming');\n\n//   if (!addBtnRef) {\n//     return;\n//   }\n\n//   // записываем id\n//   const btnId = getParentalEl.dataset.id;\n\n//   const library = JSON.parse(localStorage.getItem(LibKey)) || [];\n\n//   const filmIdsArr = library.map(item => item.id);\n\n//   if (filmIdsArr.includes(Number(btnId))) {\n//     filmAddBtn.textContent = 'Remove from my library';\n//   } else {\n//     filmAddBtn.textContent = 'Remind me';\n//   }\n// });\n","import { getWeekTrendingMovies, getUpcomingMovies, getMovieDetails } from './movies-api';\nimport { starRating } from './star-rating';\nconst LibKey = 'myLibrary';\n\nexport function renderTrending(renderFn, showFn) {\n  const container = document.getElementById('trending');\n  renderFn().then(data => {\n    container.innerHTML = showFn(data.results.slice(0, 3)).join('');\n  });\n}\n\nexport function renderUpcoming(renderFn, showFn) {\n  const container = document.getElementById('upcoming');\n  renderFn().then(({ results }) => {\n    const index = (Math.random() * (results.length - 1)).toFixed();\n    const movie = results[index];\n    container.innerHTML = showFn(movie);\n    starRating();\n    const id = movie.id;\n    remindMe(id);\n  });\n}\n\nexport function showTrending(movies) {\n  return movies.map(({ id, title, genre_ids, release_date, poster_path, vote_average }) => {\n    return `\n      <li class=\"trending__item js-card\" data-id=${id}>\n          <img class=\"trending__img\" src=https://image.tmdb.org/t/p/original${poster_path} alt=\"${title}\" loading=\"lazy\">\n            <div class=\"trending__meta\">\n                <p class=\"trending__title\">${title}</p> \n                <p class=\"trending__genres\">${getGenreNames(genre_ids)} | ${\n      release_date.split('-')[0]\n    }</p>\n      <span class=\"film-card__rating\">\n      <div class=\"rating\">\n        <div class=\"rating__body\">\n          <div class=\"rating__active\"></div>\n          <div class=\"rating__items\">\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"10\"\n              class=\"rating__item\"\n              value=\"${vote_average}\"\n              name=\"rating\"\n            />\n          </div>\n        </div>\n      </div>\n    </span>\n</div>\n      </li>`;\n  });\n}\nstarRating();\n\nexport function showUpcoming(movie) {\n  const {\n    id,\n    title,\n    genre_ids,\n    release_date,\n    poster_path,\n    vote_average,\n    overview,\n    vote_count,\n    popularity,\n    backdrop_path,\n  } = movie;\n  return `<div class=\"upcoming__item\">\n  <picture>\n  <source srcset=\"https://image.tmdb.org/t/p/original${poster_path}\" media=\"(max-width: 767px)\" sizes=\"(min-width: 480px)\">\n  <source srcset=\"https://image.tmdb.org/t/p/original${backdrop_path}\" media=\"(min-width: 768px)\" sizes=\"(min-width: 768px)\">\n     <img class=\"upcoming__img\" src=https://image.tmdb.org/t/p/original${backdrop_path} alt=\"${title}\" loading=\"lazy\">\n  </picture>\n     <div class=\"upcoming__meta\">\n<p class=\"upcoming__title\">${title}</p>\n<div class=\"upcoming__div\">\n<div class=\"upcoming__container\">\n<p class=\"upcoming__info\">Release Date</p>\n<p class=\"upcoming__info\">Vote / Votes</p>\n<p class=\"upcoming__info\">Popularity</p>\n<p class=\"upcoming__info\">Genre(s)</p>\n</div>\n<div class=\"upcoming__container\">\n<p class=\"upcoming__info upcoming__date\">${release_date.split('-').reverse().join('.')}</p>\n<p class=\"upcoming__info\"><span class=\"vote-background\">${vote_average}</span> / <span class=\"vote-background\">${vote_count}</span></p>\n<p class=\"upcoming__info\">${popularity}</p>\n<p class=\"upcoming__info\">${getGenreNames(genre_ids)}</p>\n</div>\n</div>\n<p class=\"upcoming__about\">ABOUT<p>\n<p class=\"upcoming__overview\">${overview}</p>\n<button type=\"button\" class=\"btn\" data-id=\"${id}\" id=\"btn__upcoming\">Remind me</button>\n     </div>\n    </div>`;\n}\n\nfunction getGenreNames(genreIds) {\n  const genreNames = [];\n  const collection = global.genres.genres;\n  const res = genreIds.slice(0, 2).map(function (genreId) {\n    return collection.find(function (genre) {\n      return genre.id == genreId;\n    }).name;\n  });\n  return res.join(', ');\n}\n\nasync function remindMe(idMovie) {\n  const library = JSON.parse(localStorage.getItem(LibKey)) || [];\n  const filmIdsArr = library.map(item => item.id);\n  try {\n    const data = await getMovieDetails(Number(idMovie));\n    const btn = document.getElementById('btn__upcoming');\n\n    if (filmIdsArr.includes(Number(idMovie))) {\n      btn.textContent = 'Remove from my library';\n    } else {\n      btn.textContent = 'Remind me';\n    }\n\n    btn.addEventListener('click', () => {\n      if (btn.textContent === 'Remind me') {\n        const library = JSON.parse(localStorage.getItem(LibKey)) || [];\n        library.push(data);\n        localStorage.setItem(LibKey, JSON.stringify(library));\n        btn.textContent = 'Remove from my library';\n      } else {\n        return;\n      }\n    });\n  } catch (err) {\n    return;\n  }\n}\n","(() => {\n  const refs = {\n    openModalBtn: document.querySelector('[data-modal-open]'),\n    closeModalBtn: document.querySelector('[data-modal-close]'),\n    modal: document.querySelector('[data-modal]'),\n    modalBackdrop: document.querySelector('[data-modal-backdrop]'),\n  };\n\n  refs.openModalBtn.addEventListener('click', toggleModal);\n  refs.closeModalBtn.addEventListener('click', toggleModal);\n  refs.modalBackdrop.addEventListener('click', onBackdropClick);\n\n  function toggleModal() {\n    refs.modal.classList.toggle('is-hidden');\n    const body = document.querySelector('body');\n    body.classList.toggle('modal-open');\n\n    document.addEventListener('keydown', onDocumentKeyDown);\n  }\n\n  function onDocumentKeyDown(event) {\n    if (event.key === 'Escape' && !refs.modal.classList.contains('is-hidden')) {\n      toggleModal();\n      document.removeEventListener('keydown', onDocumentKeyDown);\n    }\n  }\n\n  function onBackdropClick(event) {\n    if (event.target === refs.modalBackdrop) {\n      toggleModal();\n    }\n  }\n})();\n"],"names":["parcelRequire","$abWUW","$ddb8705c74de4445$export$d9e328703f00dc92","renderFn","showFn","container","document","getElementById","then","data","innerHTML","results","slice","join","$ddb8705c74de4445$export$52662fe6145f0299","movie","Math","random","length","toFixed","$55Csz","starRating","async","idMovie","filmIdsArr","JSON","parse","localStorage","getItem","map","item","id","getMovieDetails","Number","btn","includes","textContent","addEventListener","library","push","setItem","stringify","err","$ddb8705c74de4445$var$remindMe","$ddb8705c74de4445$export$a02e51d251069742","movies","title","genre_ids","release_date","poster_path","vote_average","$ddb8705c74de4445$var$getGenreNames","split","$ddb8705c74de4445$export$c01ec7ace55f7f9c","overview","vote_count","popularity","backdrop_path","reverse","genreIds","collection","$parcel$global","genres","genreId","find","genre","name","querySelector","getGenres","getWeekTrendingMovies","getUpcomingMovies","refs","openModalBtn","closeModalBtn","modal","modalBackdrop","toggleModal","classList","toggle","onDocumentKeyDown","event","key","contains","removeEventListener","target"],"version":3,"file":"index.ef0ff4d8.js.map"}