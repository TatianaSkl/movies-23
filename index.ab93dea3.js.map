{"mappings":"gfAAAA,EAAA,S,iCCAA,IAAAC,EAAAD,EAAA,S,GCAAC,EAAAD,EAAA,S,YAcO,SAASE,EAAeC,EAAUC,GACvC,IAAMC,EAAYC,SAASC,eAAe,YAC1CJ,IAAWK,MAAK,SAAAC,G,IAAGC,EAAOD,EAAPC,QAEXC,EAAQD,GADCE,KAAKC,UAAYH,EAAQI,OAAS,IAAIC,WAErDV,EAAUW,UAAYZ,EAAOO,IAC7B,EAAAM,EAAAC,cACYZ,SAASC,eAAe,iBAChCY,iBAAiB,QAASC,E,IAI3B,SAASC,EAAaC,GAC3B,OAAOA,EAAOC,KACZ,SAAAd,G,IAAGe,EAAEf,EAAFe,GAAIC,EAAKhB,EAALgB,MAAOC,EAASjB,EAATiB,UAAWC,EAAYlB,EAAZkB,aAAcC,EAAWnB,EAAXmB,YAAaC,EAAYpB,EAAZoB,aAClD,MAAO,sDAEiEC,OAD3BN,EAAG,mFAC4CM,OAApBF,EAAY,UAE7CE,OAFqDL,EAAM,4GAG1DK,OADDL,EAAM,uDAE3CK,OADsCC,EAAcL,GAAW,OAahDI,OAZfH,EAAaK,MAAM,KAAK,GACzB,+VAW6BF,OAAbD,EAAa,mI,IAc7B,SAASI,EAAatB,GAC3B,IACEa,EAUEb,EAVFa,GACAC,EASEd,EATFc,MACAC,EAQEf,EARFe,UACAC,EAOEhB,EAPFgB,aACAC,EAMEjB,EANFiB,YACAC,EAKElB,EALFkB,aACAK,EAIEvB,EAJFuB,SACAC,EAGExB,EAHFwB,WACAC,EAEEzB,EAFFyB,WACAC,EACE1B,EADF0B,cAEF,MAAO,mGAG8CP,OADAF,EAAY,mHAEME,OADlBO,EAAc,qIAC0BP,OAAtBO,EAAc,UAG1DP,OAHkEL,EAAM,mGAY1DK,OATdL,EAAM,wUAauBK,OAJfH,EACtCK,MAAM,KACNM,UACAC,KAAK,KAAK,kEACkGT,OAAvDD,EAAa,4CAC3CC,OADqFK,EAAW,2CAEhGL,OADAM,EAAW,oCAKPN,OAJJC,EAAcL,GAAW,6FAKRI,OADbI,EAAS,qDACOJ,OAAHN,EAAG,mE,CAKhD,SAASO,EAAcS,GACrB,IACMC,EAAaC,EAAOC,OAAOA,OAMjC,OALYH,EAASI,MAAM,EAAG,GAAGrB,KAAI,SAAUsB,GAC7C,OAAOJ,EAAWK,MAAK,SAAUC,GAC/B,OAAOA,EAAMvB,IAAMqB,C,IAClBG,I,IAEMT,KAAK,K,CAGlB,SAASnB,EAAS6B,GAChB,IAAMC,EACJ5C,SAASC,eAAe,iBAAiB4C,WAAW,WAAWC,OACjE,EAAAnD,EAAAoD,iBAAgBH,GAAS1C,MAAK,SAAAG,GAC5B2C,aAAaC,QAAQL,EAASM,KAAKC,UAAU9C,G,KA9DjD,EAAAM,EAAAC,cD3DkBZ,SAASoD,cAAc,mBASzC,EAAAzD,EAAA0D,aAAYnD,MAAK,SAAAoD,GCFV,IAAwBzD,EAAUC,EACjCC,EDENqC,EAAOC,OAASiB,ECHazD,EDIdF,EAAA4D,sBCJwBzD,EDIDiB,ECHhChB,EAAYC,SAASC,eAAe,YAC1CJ,IAAWK,MAAK,SAAAoD,GACdvD,EAAUW,UAAYZ,EAAOwD,EAAKlD,QAAQkC,MAAM,EAAG,IAAIL,KAAK,G,IDE9DrC,EAAeD,EAAA6D,kBAAmB7B,E","sources":["src/index.js","src/scripts/home-scripts.js","src/scripts/render-movies-home.js"],"sourcesContent":["import './scripts/theme-switch';\nimport './scripts/hero';\nimport './scripts/modal-window';\nimport './scripts/getWeekTrendingMoviesInCatalog';\nimport './scripts/home-scripts';\n","const addBtnRef = document.querySelector('#btn__upcoming');\n\nimport {\n  getWeekTrendingMovies,\n  getUpcomingMovies,\n  getGenres,\n} from './movies-api';\nimport { renderTrending, renderUpcoming } from './render-movies-home';\nimport { showTrending, showUpcoming } from './render-movies-home';\ngetGenres().then(data => {\n  global.genres = data;\n  renderTrending(getWeekTrendingMovies, showTrending);\n  renderUpcoming(getUpcomingMovies, showUpcoming);\n});\n","import {\n  getWeekTrendingMovies,\n  getUpcomingMovies,\n  getMovieDetails,\n} from './movies-api';\nimport { starRating } from './star-rating';\n\nexport function renderTrending(renderFn, showFn) {\n  const container = document.getElementById('trending');\n  renderFn().then(data => {\n    container.innerHTML = showFn(data.results.slice(0, 3)).join('');\n  });\n}\n\nexport function renderUpcoming(renderFn, showFn) {\n  const container = document.getElementById('upcoming');\n  renderFn().then(({ results }) => {\n    const index = (Math.random() * (results.length - 1)).toFixed();\n    const movie = results[index];\n    container.innerHTML = showFn(movie);\n    starRating();\n    const btn = document.getElementById('btn__upcoming');\n    btn.addEventListener('click', remindMe);\n  });\n}\n\nexport function showTrending(movies) {\n  return movies.map(\n    ({ id, title, genre_ids, release_date, poster_path, vote_average }) => {\n      return `\n      <li class=\"trending__item js-card\" data-id=${id}>\n          <img class=\"trending__img\" src=https://image.tmdb.org/t/p/original${poster_path} alt=\"${title}\" loading=\"lazy\">\n            <div class=\"trending__meta\">\n                <p class=\"trending__title\">${title}</p> \n                <p class=\"trending__genres\">${getGenreNames(genre_ids)} | ${\n        release_date.split('-')[0]\n      }</p>\n      <span class=\"film-card__rating\">\n      <div class=\"rating\">\n        <div class=\"rating__body\">\n          <div class=\"rating__active\"></div>\n          <div class=\"rating__items\">\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"10\"\n              class=\"rating__item\"\n              value=\"${vote_average}\"\n              name=\"rating\"\n            />\n          </div>\n        </div>\n      </div>\n    </span>\n</div>\n      </li>`;\n    }\n  );\n}\nstarRating();\n\nexport function showUpcoming(movie) {\n  const {\n    id,\n    title,\n    genre_ids,\n    release_date,\n    poster_path,\n    vote_average,\n    overview,\n    vote_count,\n    popularity,\n    backdrop_path,\n  } = movie;\n  return `<div class=\"upcoming__item\">\n  <picture>\n  <source srcset=\"https://image.tmdb.org/t/p/original${poster_path}\" media=\"(max-width: 767px)\" sizes=\"(min-width: 480px)\">\n  <source srcset=\"https://image.tmdb.org/t/p/original${backdrop_path}\" media=\"(min-width: 768px)\" sizes=\"(min-width: 768px)\">\n     <img class=\"upcoming__img\" src=https://image.tmdb.org/t/p/original${backdrop_path} alt=\"${title}\" loading=\"lazy\">\n  </picture>\n     <div class=\"upcoming__meta\">\n<p class=\"upcoming__title\">${title}</p>\n<div class=\"upcoming__div\">\n<div class=\"upcoming__container\">\n<p class=\"upcoming__info\">Release Date</p>\n<p class=\"upcoming__info\">Vote / Votes</p>\n<p class=\"upcoming__info\">Popularity</p>\n<p class=\"upcoming__info\">Genre(s)</p>\n</div>\n<div class=\"upcoming__container\">\n<p class=\"upcoming__info upcoming__date\">${release_date\n    .split('-')\n    .reverse()\n    .join('.')}</p>\n<p class=\"upcoming__info\"><span class=\"vote-background\">${vote_average}</span> / <span class=\"vote-background\">${vote_count}</span></p>\n<p class=\"upcoming__info\">${popularity}</p>\n<p class=\"upcoming__info\">${getGenreNames(genre_ids)}</p>\n</div>\n</div>\n<p class=\"upcoming__about\">ABOUT<p>\n<p class=\"upcoming__overview\">${overview}</p>\n<button type=\"button\" class=\"btn\" data-id=\"${id}\" id=\"btn__upcoming\">Remind me</button>\n     </div>\n    </div>`;\n}\n\nfunction getGenreNames(genreIds) {\n  const genreNames = [];\n  const collection = global.genres.genres;\n  const res = genreIds.slice(0, 2).map(function (genreId) {\n    return collection.find(function (genre) {\n      return genre.id == genreId;\n    }).name;\n  });\n  return res.join(', ');\n}\n\nfunction remindMe(evt) {\n  const movieId =\n    document.getElementById('btn__upcoming').attributes['data-id'].value;\n  getMovieDetails(movieId).then(movie => {\n    localStorage.setItem(movieId, JSON.stringify(movie));\n  });\n}\n"],"names":["parcelRequire","$algKM","$6db21ae97ac77000$export$52662fe6145f0299","renderFn","showFn","container","document","getElementById","then","param","results","movie","Math","random","length","toFixed","innerHTML","$3hLJb","starRating","addEventListener","$6db21ae97ac77000$var$remindMe","$6db21ae97ac77000$export$a02e51d251069742","movies","map","id","title","genre_ids","release_date","poster_path","vote_average","concat","$6db21ae97ac77000$var$getGenreNames","split","$6db21ae97ac77000$export$c01ec7ace55f7f9c","overview","vote_count","popularity","backdrop_path","reverse","join","genreIds","collection","$parcel$global","genres","slice","genreId","find","genre","name","evt","movieId","attributes","value","getMovieDetails","localStorage","setItem","JSON","stringify","querySelector","getGenres","data","getWeekTrendingMovies","getUpcomingMovies"],"version":3,"file":"index.ab93dea3.js.map"}