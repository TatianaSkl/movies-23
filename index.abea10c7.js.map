{"mappings":"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","sources":["src/index.js","src/scripts/home-scripts.js","src/scripts/render-movies-home.js"],"sourcesContent":["import './scripts/theme-switch';\nimport './scripts/hero';\nimport './scripts/modal-window';\nimport './scripts/home-scripts';\nimport './scripts/modal-students';\nimport './scripts/current';\n","const addBtnRef = document.querySelector('#btn__upcoming');\nconst LibKey = 'myLibrary';\n\nimport {\n  getWeekTrendingMovies,\n  getUpcomingMovies,\n  getGenres,\n} from './movies-api';\nimport { renderTrending, renderUpcoming } from './render-movies-home';\nimport { showTrending, showUpcoming } from './render-movies-home';\ngetGenres().then(data => {\n  global.genres = data;\n  renderTrending(getWeekTrendingMovies, showTrending);\n  renderUpcoming(getUpcomingMovies, showUpcoming);\n  const addBtnRef = document.querySelector('#btn__upcoming');\n});\n\n// addBtnRef.addEventListener('click', () => {\n//   const addBtnRef = event.target.closest('#btn__upcoming');\n\n//   if (!addBtnRef) {\n//     return;\n//   }\n\n//   // записываем id\n//   const btnId = getParentalEl.dataset.id;\n\n//   const library = JSON.parse(localStorage.getItem(LibKey)) || [];\n\n//   const filmIdsArr = library.map(item => item.id);\n\n//   if (filmIdsArr.includes(Number(btnId))) {\n//     filmAddBtn.textContent = 'Remove from my library';\n//   } else {\n//     filmAddBtn.textContent = 'Remind me';\n//   }\n// });\n","import { getWeekTrendingMovies, getUpcomingMovies, getMovieDetails } from './movies-api';\nimport { starRating } from './star-rating';\nconst LibKey = 'myLibrary';\n\nexport function renderTrending(renderFn, showFn) {\n  const container = document.getElementById('trending');\n  renderFn().then(data => {\n    container.innerHTML = showFn(data.results.slice(0, 3)).join('');\n  });\n}\n\nexport function renderUpcoming(renderFn, showFn) {\n  const container = document.getElementById('upcoming');\n  renderFn().then(({ results }) => {\n    const index = (Math.random() * (results.length - 1)).toFixed();\n    const movie = results[index];\n    container.innerHTML = showFn(movie);\n    starRating();\n    const id = movie.id;\n    remindMe(id);\n  });\n}\n\nexport function showTrending(movies) {\n  return movies.map(({ id, title, genre_ids, release_date, poster_path, vote_average }) => {\n    return `\n      <li class=\"trending__item js-card\" data-id=${id}>\n          <img class=\"trending__img\" src=https://image.tmdb.org/t/p/original${poster_path} alt=\"${title}\" loading=\"lazy\">\n            <div class=\"trending__meta\">\n                <p class=\"trending__title\">${title}</p> \n                <p class=\"trending__genres\">${getGenreNames(genre_ids)} | ${\n      release_date.split('-')[0]\n    }</p>\n      <span class=\"film-card__rating\">\n      <div class=\"rating\">\n        <div class=\"rating__body\">\n          <div class=\"rating__active\"></div>\n          <div class=\"rating__items\">\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"10\"\n              class=\"rating__item\"\n              value=\"${vote_average}\"\n              name=\"rating\"\n            />\n          </div>\n        </div>\n      </div>\n    </span>\n</div>\n      </li>`;\n  });\n}\nstarRating();\n\nexport function showUpcoming(movie) {\n  const {\n    id,\n    title,\n    genre_ids,\n    release_date,\n    poster_path,\n    vote_average,\n    overview,\n    vote_count,\n    popularity,\n    backdrop_path,\n  } = movie;\n  return `<div class=\"upcoming__item\">\n  <picture>\n  <source srcset=\"https://image.tmdb.org/t/p/original${poster_path}\" media=\"(max-width: 767px)\" sizes=\"(min-width: 480px)\">\n  <source srcset=\"https://image.tmdb.org/t/p/original${backdrop_path}\" media=\"(min-width: 768px)\" sizes=\"(min-width: 768px)\">\n     <img class=\"upcoming__img\" src=https://image.tmdb.org/t/p/original${backdrop_path} alt=\"${title}\" loading=\"lazy\">\n  </picture>\n     <div class=\"upcoming__meta\">\n<p class=\"upcoming__title\">${title}</p>\n<div class=\"upcoming__div\">\n<div class=\"upcoming__container\">\n<p class=\"upcoming__info\">Release Date</p>\n<p class=\"upcoming__info\">Vote / Votes</p>\n<p class=\"upcoming__info\">Popularity</p>\n<p class=\"upcoming__info\">Genre(s)</p>\n</div>\n<div class=\"upcoming__container\">\n<p class=\"upcoming__info upcoming__date\">${release_date.split('-').reverse().join('.')}</p>\n<p class=\"upcoming__info\"><span class=\"vote-background\">${vote_average}</span> / <span class=\"vote-background\">${vote_count}</span></p>\n<p class=\"upcoming__info\">${popularity}</p>\n<p class=\"upcoming__info\">${getGenreNames(genre_ids)}</p>\n</div>\n</div>\n<p class=\"upcoming__about\">ABOUT<p>\n<p class=\"upcoming__overview\">${overview}</p>\n<button type=\"button\" class=\"btn\" data-id=\"${id}\" id=\"btn__upcoming\">Remind me</button>\n     </div>\n    </div>`;\n}\n\nfunction getGenreNames(genreIds) {\n  const genreNames = [];\n  const collection = global.genres.genres;\n  const res = genreIds.slice(0, 2).map(function (genreId) {\n    return collection.find(function (genre) {\n      return genre.id == genreId;\n    }).name;\n  });\n  return res.join(', ');\n}\n\nasync function remindMe(idMovie) {\n  const library = JSON.parse(localStorage.getItem(LibKey)) || [];\n  const filmIdsArr = library.map(item => item.id);\n  try {\n    const data = await getMovieDetails(Number(idMovie));\n    const btn = document.getElementById('btn__upcoming');\n\n    if (filmIdsArr.includes(Number(idMovie))) {\n      btn.textContent = 'Remove from my library';\n    } else {\n      btn.textContent = 'Remind me';\n    }\n\n    btn.addEventListener('click', () => {\n      if (btn.textContent === 'Remind me') {\n        const library = JSON.parse(localStorage.getItem(LibKey)) || [];\n        library.push(data);\n        localStorage.setItem(LibKey, JSON.stringify(library));\n        btn.textContent = 'Added to my library';\n        btn.disabled = true;\n        btn.classList.add('disabled');\n      } else {\n        return;\n      }\n    });\n  } catch (err) {\n    return;\n  }\n}\n"],"names":["parcelRequire","$algKM","$bpxeT","$6db21ae97ac77000$var$LibKey","$6db21ae97ac77000$export$52662fe6145f0299","renderFn","showFn","container","document","getElementById","then","param","results","movie","Math","random","length","toFixed","innerHTML","$3hLJb","starRating","idMovie","$6db21ae97ac77000$var$_remindMe","apply","this","arguments","$6db21ae97ac77000$var$remindMe","id","$6db21ae97ac77000$export$a02e51d251069742","movies","map","title","genre_ids","release_date","poster_path","vote_average","concat","$6db21ae97ac77000$var$getGenreNames","split","$6db21ae97ac77000$export$c01ec7ace55f7f9c","overview","vote_count","popularity","backdrop_path","reverse","join","genreIds","collection","$parcel$global","genres","slice","genreId","find","genre","name","$parcel$interopDefault","$2TvXO","mark","_callee","library1","filmIdsArr","data","btn","JSON","parse","localStorage","getItem","item","getMovieDetails","Number","_ctx","sent","includes","textContent","addEventListener","library","push","setItem","stringify","disabled","classList","add","querySelector","getGenres","getWeekTrendingMovies","getUpcomingMovies"],"version":3,"file":"index.abea10c7.js.map"}