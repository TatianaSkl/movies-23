{"mappings":"qiBAAAA,EAAA,S,iCCAA,IAAAC,EAAAD,EAAA,S,iEAMME,G,aAAaC,SAASC,cAAc,iBACpCC,EAAYF,SAASC,cAAc,kBACnCE,EAAUH,SAASC,cAAc,qBACjCG,EAAmBJ,SAASC,cAAc,uBAC1CI,EAAW,IAAI,EAAAC,EAAAC,mB,SAINC,I,OAAAA,EAAfC,EAAAX,EAAA,CAAAW,EAAAC,GAAAC,MAAA,SAAAC,EAAwBC,G,IAGhBC,EAkBAC,EACAC,EAIAC,E,qEAzBNJ,EAAEK,iBAEIJ,EAAYD,EAAEM,cAAcC,SAASC,YAAYC,MAAMC,OAC7DpB,EAAQqB,UAAUC,IAAI,aAGJ,KAAdX,EAAgB,C,sBAClBV,EAAiBoB,UAAUC,IAAI;AAC/BvB,EAAUwB,UAAY,GACtBC,SAASC,OAAOC,QACd,8DAGF9B,EAAW+B,Q,iCAIb5B,EAAUwB,UAAY,GACtBrB,EAAS0B,MAAQjB,E,UAEQT,EAAS2B,e,eAA5BjB,EAAUkB,EAAAC,KACVlB,GAAa,EAAAmB,EAAAC,kBACjBrB,EAAWsB,cACXtB,EAAWuB,a,UAEevB,EAAWwB,QAAQC,MAAM,EAAG,I,QAAlDvB,EAAagB,EAAAC,KAEnB,IACMjB,EAAcwB,OAAS,IACzB,EAAAnC,EAAAoC,aAAYC,MAAK,SAAAC,GACfC,EAAOC,OAASF,EAEhB,IAAMG,GAAe,EAAAC,EAAAC,uBAAsBhC,GAC3Cf,EAAUwB,UAAYqB,GACtB,EAAAG,EAAAC,a,IAEF/C,EAAiBoB,UAAU4B,OAAO,mBAElCpC,EAAWqC,GAAG,cAAc,SAAAC,G,IAAGC,EAAID,EAAJC,KAE7BlD,EAAS2B,aAAauB,GAAMZ,MAAK,SAAAC,GAC/B,IAAMY,EAASZ,EAAKL,QAAQC,MAAM,EAAG,IAErC,GAAIgB,EAAQ,CACVpD,EAAiBoB,UAAU4B,OAAO,mBAClC,IAAMK,GAAqB,EAAAT,EAAAC,uBAAsBO,GACjDtD,EAAUwB,UAAY+B,GACtB,EAAAP,EAAAC,cACAO,OAAOC,SAAS,CACdC,IAAK,IACLC,SAAU,U,UAMlB1D,EAAQqB,UAAU4B,OAAO,aACzBhD,EAAiBoB,UAAUC,IAAI,mB,CAEjC,MAAOqC,GACPC,QAAQC,IAAIF,EAAMG,Q,CACnB,QACClE,EAAW+B,O,8CA/DQoC,MAAAC,KAAAC,U,CAFvBrE,EAAWsE,iBAAiB,U,SAEJxD,G,OAATL,EAAQ0D,MAAAC,KAAAC,U","sources":["src/catalog.js","src/scripts/search-films.js"],"sourcesContent":["import './scripts/theme-switch';\nimport './scripts/hero';\nimport './scripts/getWeekTrendingMoviesInCatalog';\nimport './scripts/modal-window';\nimport './scripts/search-films';\n","import { CatalogApiService, searchMovies } from './movies-api';\nimport { createMarkupFilmsList } from './markup';\nimport { starRating } from './star-rating';\nimport { createPagination } from './pagination';\nimport { getGenres } from './movies-api';\n\nconst searchForm = document.querySelector('.search-form');\nconst movieList = document.querySelector('.catalog__list');\nconst message = document.querySelector('.catalog__message');\nconst paginationHidden = document.querySelector('.catalog-pagination');\nconst movieAPI = new CatalogApiService();\n\nsearchForm.addEventListener('submit', onSearch);\n\nasync function onSearch(e) {\n  e.preventDefault();\n\n  const formValue = e.currentTarget.elements.searchQuery.value.trim();\n  message.classList.add('is-hidden');\n  // paginationHidden.classList.remove('visually-hidden');\n\n  if (formValue === '') {\n    paginationHidden.classList.add('visually-hidden'); //!\n    movieList.innerHTML = '';\n    Notiflix.Notify.failure(\n      \"Sorry, the search string can't be empty. Please try again.\"\n    );\n\n    searchForm.reset();\n    return;\n  }\n\n  movieList.innerHTML = '';\n  movieAPI.query = formValue;\n\n  const dataSearch = await movieAPI.searchMovies();\n  const pagination = createPagination(\n    dataSearch.total_results,\n    dataSearch.total_pages\n  ); // TODO pagination\n  const searchResults = await dataSearch.results.slice(0, 10);\n\n  try {\n    if (searchResults.length > 0) {\n      getGenres().then(data => {\n        global.genres = data;\n\n        const markupMovies = createMarkupFilmsList(searchResults);\n        movieList.innerHTML = markupMovies;\n        starRating();\n      });\n      paginationHidden.classList.remove('visually-hidden');\n\n      pagination.on('beforeMove', ({ page }) => {\n        // movieList.innerHTML = '';\n        movieAPI.searchMovies(page).then(data => {\n          const movies = data.results.slice(0, 10);\n\n          if (movies) {\n            paginationHidden.classList.remove('visually-hidden');\n            const markupSearchMovies = createMarkupFilmsList(movies);\n            movieList.innerHTML = markupSearchMovies;\n            starRating();\n            window.scrollTo({\n              top: 450,\n              behavior: 'smooth',\n            });\n          }\n        });\n      });\n    } else {\n      message.classList.remove('is-hidden');\n      paginationHidden.classList.add('visually-hidden');\n    }\n  } catch (error) {\n    console.log(error.message);\n  } finally {\n    searchForm.reset();\n  }\n}\n"],"names":["parcelRequire","$bpxeT","$82f6748b73b25484$var$searchForm","document","querySelector","$82f6748b73b25484$var$movieList","$82f6748b73b25484$var$message","$82f6748b73b25484$var$paginationHidden","$82f6748b73b25484$var$movieAPI","$algKM","CatalogApiService","$82f6748b73b25484$var$_onSearch","$parcel$interopDefault","$2TvXO","mark","_callee","e","formValue","dataSearch","pagination","searchResults","preventDefault","currentTarget","elements","searchQuery","value","trim","classList","add","innerHTML","Notiflix","Notify","failure","reset","query","searchMovies","_ctx","sent","$2lJ8w","createPagination","total_results","total_pages","results","slice","length","getGenres","then","data","$parcel$global","genres","markupMovies","$cLkiC","createMarkupFilmsList","$3hLJb","starRating","remove","on","param","page","movies","markupSearchMovies","window","scrollTo","top","behavior","error","console","log","message","apply","this","arguments","addEventListener"],"version":3,"file":"catalog.786a0706.js.map"}